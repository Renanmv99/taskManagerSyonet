version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: task-manager-db
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task-manager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taskdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-manager-backend
    environment:
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/taskdb
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: ${HIBERNATE_DDL_AUTO:-update}
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION_HALT_ON_ERROR: false
      QUARKUS_PROFILE: prod
      QUARKUS_HTTP_HOST: 0.0.0.0
      QUARKUS_HTTP_PORT: 8080
      QUARKUS_HTTP_CORS: true
      QUARKUS_HTTP_CORS_ORIGINS: "http://localhost:3000,http://frontend:80"
      QUARKUS_HTTP_CORS_HEADERS: "accept,authorization,content-type,x-requested-with"
      QUARKUS_HTTP_CORS_METHODS: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
      QUARKUS_LOG_LEVEL: INFO
      JAVA_OPTS: "-Xmx512m -Xms256m"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task-manager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/q/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-manager-frontend
    environment:
      VITE_API_URL: http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - task-manager-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  task-manager-network:
    driver: bridge